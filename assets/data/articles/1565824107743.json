{
    "author": "Palantir",
    "comments": [{
        "comment": "Reviewers should be learning from what committer is putting up for code review.",
        "createdDate": "2019-08-14"
    }, {
        "comment": "Commit message standards says, 'Write your commit message in the imperative'; 'Fix bug' not 'Fixed bug'.",
        "createdDate": "2019-08-14"
    }, {
        "comment": "Code should only be reviewed by 1 to 2 people at a time.",
        "createdDate": "2019-08-14"
    }, {
        "comment": "Reviewer should make sure; code solved developers problem, code is implemented correctly, code follows standard practice, code is legible and adheres to style of project, code has and passes tests, code is backwards compatible, code has some documentation.",
        "createdDate": "2019-08-14"
    }, {
        "comment": "Developer should respond to all comments from reviews, even if just an acknowledgement.",
        "createdDate": "2019-08-14"
    }, {
        "comment": "Reviewer should point out; inconsistent naming, inconsistent method signatures, library use, bugs, personal taste in styling that the rest of the project adheres to, and concerns in architecture.",
        "createdDate": "2019-08-14"
    }],
    "description": "Overview on how a code review should be done for best results.",
    "publishDate": "2018-03-04",
    "publisher": "Palantir Plog",
    "quotes": [{
        "quote": "Recognition of coding expertise through peers is a source of pride for many programmers.",
        "createdDate": "2019-08-14"
    }, {
        "quote": "Code reviews are classless: being the most senior person on the team does not imply that your code does not need review.",
        "createdDate": "2019-08-14"
    }, {
        "quote": "Code reviews should happen after automated checks (tests, style, other CI) have completed successfully, but before the code merges to the repositoryâ€™s mainline branch. ",
        "createdDate": "2019-08-14"
    }, {
        "quote": "Refactoring changes should not alter behavior; conversely, a behavior-changing changes should avoid refactoring and code formatting changes.",
        "createdDate": "2019-08-14"
    }],
    "tags": ["best-practice", "code-review", "git", "software"],
    "title": "Code Review Best Practices",
    "url": "https://medium.com/palantir/code-review-best-practices-19e02780015f",
    "createdDate": "2019-08-14"
}